# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /api/forest:
        post:
            tags:
                - Forests
            description: Push a Leaf
            operationId: Forests_PushLeaf
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/forest.v1.PushLeafRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/forest.v1.PushLeafReply'
    /api/forest/all:
        get:
            tags:
                - Forests
            description: Get Leafs
            operationId: Forests_GetForest
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: pagesize
                  in: query
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/forest.v1.GetLeafsReply'
    /api/forest/comments/{id}:
        put:
            tags:
                - Forests
            description: Like Comment
            operationId: Forests_LikeComment
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/forest.v1.LikeCommentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/forest.v1.LikeCommentReply'
        delete:
            tags:
                - Forests
            description: Delete Comment
            operationId: Forests_DeleteComment
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/forest.v1.DeleteCommentReply'
    /api/forest/comments/{root}:
        get:
            tags:
                - Forests
            description: Get Comments
            operationId: Forests_GetComments
            parameters:
                - name: root
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: pagesize
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: father
                  in: query
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/forest.v1.GetCommentsReply'
        post:
            tags:
                - Forests
            description: Comment Leaf
            operationId: Forests_Comment
            parameters:
                - name: root
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/forest.v1.CommentLeafRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/forest.v1.CommentLeafRePly'
    /api/forest/{id}:
        get:
            tags:
                - Forests
            description: Get Leaf Detail
            operationId: Forests_GetLeafDetail
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/forest.v1.GetLeafDetailReply'
        delete:
            tags:
                - Forests
            description: Delete a Leaf
            operationId: Forests_DeleteLeaf
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/forest.v1.DeleteLeafReply'
    /api/user/info/{id}:
        get:
            tags:
                - Users
            description: 获取用户资料
            operationId: Users_GetUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.GetUserReply'
    /api/user/login:
        post:
            tags:
                - Users
            description: 登录
            operationId: Users_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.LoginUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.LoginUserReply'
    /api/user/mfa:
        get:
            tags:
                - Users
            description: MFA获取秘钥二维码
            operationId: Users_MFAGetQRCode
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.MFAGetQRCodeReply'
        post:
            tags:
                - Users
            description: MFA激活
            operationId: Users_MFAActivate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.MFAActivateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.MFAActivateReply'
        delete:
            tags:
                - Users
            description: MFA解绑
            operationId: Users_MFACancel
            parameters:
                - name: code
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.MFACancelReply'
    /api/user/register:
        post:
            tags:
                - Users
            description: 注册
            operationId: Users_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.RegisterUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.RegisterUserReply'
components:
    schemas:
        forest.v1.Comment:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                owner:
                    type: integer
                    format: int64
                root:
                    type: integer
                    format: int64
                father:
                    type: integer
                    format: int64
                createdAt:
                    type: integer
                    format: int64
                status:
                    type: integer
                    format: int64
                message:
                    type: string
                liked:
                    type: integer
                    format: int64
        forest.v1.CommentLeafRePly:
            type: object
            properties:
                code:
                    type: integer
                    format: int64
                msg:
                    type: string
        forest.v1.CommentLeafRequest:
            type: object
            properties:
                root:
                    type: integer
                    format: int64
                status:
                    type: integer
                    format: int64
                message:
                    type: string
                father:
                    type: integer
                    format: int64
        forest.v1.DeleteCommentReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int64
                msg:
                    type: string
        forest.v1.DeleteLeafReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int64
                msg:
                    type: string
        forest.v1.GetCommentsReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int64
                msg:
                    type: string
                data:
                    $ref: '#/components/schemas/forest.v1.MultipleCommentReply'
        forest.v1.GetLeafDetailReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int64
                msg:
                    type: string
                data:
                    $ref: '#/components/schemas/forest.v1.Leaf'
        forest.v1.GetLeafsReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int64
                msg:
                    type: string
                data:
                    $ref: '#/components/schemas/forest.v1.MultipleLeafReply'
        forest.v1.Leaf:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                owner:
                    type: integer
                    format: int64
                message:
                    type: string
                createdAt:
                    type: integer
                    format: int64
                status:
                    type: integer
                    format: int64
                liked:
                    type: integer
                    format: int64
        forest.v1.LikeCommentReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int64
                msg:
                    type: string
        forest.v1.LikeCommentRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
        forest.v1.MultipleCommentReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/forest.v1.Comment'
                total:
                    type: integer
                    format: int64
        forest.v1.MultipleLeafReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/forest.v1.Leaf'
                total:
                    type: integer
                    format: int64
        forest.v1.PushLeafReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int64
                msg:
                    type: string
        forest.v1.PushLeafRequest:
            type: object
            properties:
                status:
                    type: integer
                    format: int64
                message:
                    type: string
        user.v1.GetUserReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int64
                msg:
                    type: string
                data:
                    $ref: '#/components/schemas/user.v1.User'
        user.v1.LoginUserReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int64
                msg:
                    type: string
                token:
                    type: string
                data:
                    $ref: '#/components/schemas/user.v1.User'
        user.v1.LoginUserRequest:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
                code:
                    type: string
        user.v1.MFA:
            type: object
            properties:
                qrlink:
                    type: string
                secret:
                    type: string
        user.v1.MFAActivateReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int64
                msg:
                    type: string
        user.v1.MFAActivateRequest:
            type: object
            properties:
                code:
                    type: string
                secret:
                    type: string
        user.v1.MFACancelReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int64
                msg:
                    type: string
        user.v1.MFAGetQRCodeReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int64
                msg:
                    type: string
                data:
                    $ref: '#/components/schemas/user.v1.MFA'
        user.v1.RegisterUserReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int64
                msg:
                    type: string
                data:
                    $ref: '#/components/schemas/user.v1.User'
        user.v1.RegisterUserRequest:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
                email:
                    type: string
                phone:
                    type: integer
                    format: int64
        user.v1.User:
            type: object
            properties:
                userid:
                    type: integer
                    format: int64
                username:
                    type: string
                status:
                    type: integer
                    format: int64
                email:
                    type: string
                nickname:
                    type: string
                createdAt:
                    type: integer
                    format: int64
                phone:
                    type: integer
                    format: int64
                mfaEnabled:
                    type: boolean
tags:
    - name: Forests
      description: The greeting service definition.
    - name: Users
      description: The greeting service definition.
