syntax = "proto3";

package user.v1;

import "google/api/annotations.proto";
// import "google/protobuf/empty.proto";
import "validate/validate.proto";

option go_package = "hollow/api/user/v1;v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.user.v1";
option java_outer_classname = "UserProtoV1";

// The greeting service definition.
service Users {

    // 测试连通性
    rpc PingConnect (PingConnectRequest) returns (PingConnectReply) {
        option (google.api.http) = {
            get: "/api/ping"
        };
    }

    // 发送手机验证码
    rpc SendShortMsg (SendShortMsgRequest) returns (SendShortMsgReply) {
        option (google.api.http) = {
            post: "/api/user/register/shortmsg",
            body: "*",
        };
    }

    rpc reBindPhone (reBindPhoneRequest) returns (reBindPhoneReply) {
        option (google.api.http) = {
            post: "/api/user/rebind/phone",
            body: "*"
        };
    }

    // 注册
    rpc Register (RegisterUserRequest) returns (RegisterUserReply) {
        option (google.api.http) = {
            post: "/api/user/register",
            body: "*",
        };
    }

    // 登录
    rpc Login (LoginUserRequest) returns (LoginUserReply) {
        option (google.api.http) = {
            post: "/api/user/login",
            body: "*",
        };
    }

    // 获取用户资料
    rpc GetUser (GetUserRequest) returns (GetUserReply) {
        option (google.api.http) = {
            get: "/api/user/info/{id}"
        };
    }

    // MFA获取秘钥二维码
    rpc MFAGetQRCode (NullRequest) returns (MFAGetQRCodeReply) {
        option (google.api.http) = {
            get: "/api/user/mfa"
        };
    }

    // MFA激活
    rpc MFAActivate (MFAActivateRequest) returns (MFAActivateReply) {
        option (google.api.http) = {
            post: "/api/user/mfa",
            body: "*"
        };
    }

    // MFA解绑
    rpc MFACancel (MFACancelRequest) returns (MFACancelReply) {
        option (google.api.http) = {
            delete: "/api/user/mfa",
        };
    }

    // rpc Update (UpdateUserRequest) returns (UpdateUserReply) {
    //     option (google.api.http) = {
    //         put: "/api/user/update",
    //         body: "*",
    //     };
    // }
}
//Request Messages

message PingConnectRequest{

}

message SendShortMsgRequest{
    string phone = 1 [(validate.rules).string = {len: 11}]; // 手机号
}

message reBindPhoneRequest{
    string phone = 1 [(validate.rules).string = {len: 11}]; // 手机号
    string code = 2 [(validate.rules).string = {len: 6}];
    string mfacode = 3 [(validate.rules).string = {ignore_empty: true,len: 6}];
}

message LoginUserRequest{
    string username = 1 [(validate.rules).string = {min_len: 1, max_len: 10}];
    string password = 2 [(validate.rules).string = {min_len: 6, max_len: 16}];
    string code = 3 [(validate.rules).string = {ignore_empty: true, len: 6}];  //MFA
}

message RegisterUserRequest{
    string username = 1 [(validate.rules).string = {min_len: 1, max_len: 10}];
    string password = 2 [(validate.rules).string = {min_len: 6, max_len: 16}];
    string email = 3 [(validate.rules).string.email = true];
    string phone = 4 [(validate.rules).string = {len: 11}];
    string code = 5 [(validate.rules).string = {len: 6}];
}

message GetUserRequest{
    int64 id = 1 [(validate.rules).int64 = {gte: 1}];
}

message NullRequest{

}

message MFAActivateRequest {
    string code = 1 [(validate.rules).string = {len: 6}];
    string secret = 2;
}

message MFACancelRequest {
    string code = 1 [(validate.rules).string = {len: 6}];
}

//Reply Messages

message ShortMsg{
    string code = 1;
    string message = 2;
    string bizid = 3;
    string requestid = 4;
}

message User{
    int64 userid = 1;
    string username = 2;
    int64 status = 3;
    string email = 4;
    string nickname = 5;
    int64 created_at = 6;
    int64 phone = 7;
    bool mfa_enabled = 8;
}

message MFA{
    string qrlink = 1;
    string secret = 2;
}

message PingConnectReply{
    int64 code = 1;
    string msg = 2;
}

message SendShortMsgReply{
    int64 code = 1;
    string msg = 2;
    ShortMsg data = 3;
}

message reBindPhoneReply{
    int64 code = 1;
    string msg = 2;
}

message RegisterUserReply{
    int64 code = 1;
    string msg = 2;
    User data = 3;
}


message LoginUserReply{
    int64 code = 1;
    string msg = 2;
    string token = 3;
    User data = 4;
}

message GetUserReply{
    int64 code = 1;
    string msg = 2;
    User data = 3;
}

message MFAGetQRCodeReply{
    int64 code = 1;
    string msg = 2;
    MFA data = 3;
}

message MFAActivateReply{
    int64 code = 1;
    string msg = 2;
}

message MFACancelReply{
    int64 code = 1;
    string msg = 2;
}