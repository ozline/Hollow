// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: hollow/v1/forest.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PushLeafRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"` //0=匿名 1=实名
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PushLeafRequest) Reset() {
	*x = PushLeafRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushLeafRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushLeafRequest) ProtoMessage() {}

func (x *PushLeafRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushLeafRequest.ProtoReflect.Descriptor instead.
func (*PushLeafRequest) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{0}
}

func (x *PushLeafRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PushLeafRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteLeafRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteLeafRequest) Reset() {
	*x = DeleteLeafRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLeafRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLeafRequest) ProtoMessage() {}

func (x *DeleteLeafRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLeafRequest.ProtoReflect.Descriptor instead.
func (*DeleteLeafRequest) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteLeafRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetLeafsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Pagesize int64 `protobuf:"varint,2,opt,name=pagesize,proto3" json:"pagesize,omitempty"`
}

func (x *GetLeafsRequest) Reset() {
	*x = GetLeafsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeafsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeafsRequest) ProtoMessage() {}

func (x *GetLeafsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeafsRequest.ProtoReflect.Descriptor instead.
func (*GetLeafsRequest) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{2}
}

func (x *GetLeafsRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetLeafsRequest) GetPagesize() int64 {
	if x != nil {
		return x.Pagesize
	}
	return 0
}

type GetLeafDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetLeafDetailRequest) Reset() {
	*x = GetLeafDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeafDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeafDetailRequest) ProtoMessage() {}

func (x *GetLeafDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeafDetailRequest.ProtoReflect.Descriptor instead.
func (*GetLeafDetailRequest) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{3}
}

func (x *GetLeafDetailRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CommentLeafRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root    int64  `protobuf:"varint,1,opt,name=root,proto3" json:"root,omitempty"`
	Status  int64  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"` //0=匿名 1=实名
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Father  int64  `protobuf:"varint,4,opt,name=father,proto3" json:"father,omitempty"` //可空
}

func (x *CommentLeafRequest) Reset() {
	*x = CommentLeafRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentLeafRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentLeafRequest) ProtoMessage() {}

func (x *CommentLeafRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentLeafRequest.ProtoReflect.Descriptor instead.
func (*CommentLeafRequest) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{4}
}

func (x *CommentLeafRequest) GetRoot() int64 {
	if x != nil {
		return x.Root
	}
	return 0
}

func (x *CommentLeafRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CommentLeafRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CommentLeafRequest) GetFather() int64 {
	if x != nil {
		return x.Father
	}
	return 0
}

type GetCommentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root     int64 `protobuf:"varint,1,opt,name=root,proto3" json:"root,omitempty"`
	Page     int64 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Pagesize int64 `protobuf:"varint,3,opt,name=pagesize,proto3" json:"pagesize,omitempty"`
	Father   int64 `protobuf:"varint,4,opt,name=father,proto3" json:"father,omitempty"` //可空
}

func (x *GetCommentsRequest) Reset() {
	*x = GetCommentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentsRequest) ProtoMessage() {}

func (x *GetCommentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentsRequest.ProtoReflect.Descriptor instead.
func (*GetCommentsRequest) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{5}
}

func (x *GetCommentsRequest) GetRoot() int64 {
	if x != nil {
		return x.Root
	}
	return 0
}

func (x *GetCommentsRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetCommentsRequest) GetPagesize() int64 {
	if x != nil {
		return x.Pagesize
	}
	return 0
}

func (x *GetCommentsRequest) GetFather() int64 {
	if x != nil {
		return x.Father
	}
	return 0
}

type DeleteCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCommentRequest) Reset() {
	*x = DeleteCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentRequest) ProtoMessage() {}

func (x *DeleteCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteCommentRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type LikeCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *LikeCommentRequest) Reset() {
	*x = LikeCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeCommentRequest) ProtoMessage() {}

func (x *LikeCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeCommentRequest.ProtoReflect.Descriptor instead.
func (*LikeCommentRequest) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{7}
}

func (x *LikeCommentRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type   int64  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Reason string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *ReportRequest) Reset() {
	*x = ReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportRequest) ProtoMessage() {}

func (x *ReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportRequest.ProtoReflect.Descriptor instead.
func (*ReportRequest) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{8}
}

func (x *ReportRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReportRequest) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReportRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type GetReportListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Pagesize int64 `protobuf:"varint,2,opt,name=pagesize,proto3" json:"pagesize,omitempty"`
}

func (x *GetReportListRequest) Reset() {
	*x = GetReportListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportListRequest) ProtoMessage() {}

func (x *GetReportListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportListRequest.ProtoReflect.Descriptor instead.
func (*GetReportListRequest) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{9}
}

func (x *GetReportListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetReportListRequest) GetPagesize() int64 {
	if x != nil {
		return x.Pagesize
	}
	return 0
}

type UpdateReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Reply string `protobuf:"bytes,2,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *UpdateReportRequest) Reset() {
	*x = UpdateReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReportRequest) ProtoMessage() {}

func (x *UpdateReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReportRequest.ProtoReflect.Descriptor instead.
func (*UpdateReportRequest) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateReportRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateReportRequest) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

type UpdateCommentStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status int64 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateCommentStatusRequest) Reset() {
	*x = UpdateCommentStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommentStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentStatusRequest) ProtoMessage() {}

func (x *UpdateCommentStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateCommentStatusRequest) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateCommentStatusRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCommentStatusRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UpdateLeafStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status int64 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateLeafStatusRequest) Reset() {
	*x = UpdateLeafStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLeafStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLeafStatusRequest) ProtoMessage() {}

func (x *UpdateLeafStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLeafStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateLeafStatusRequest) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateLeafStatusRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateLeafStatusRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type Leaf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Owner     int64  `protobuf:"varint,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Message   string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	CreatedAt int64  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Status    int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Liked     int64  `protobuf:"varint,6,opt,name=liked,proto3" json:"liked,omitempty"`
}

func (x *Leaf) Reset() {
	*x = Leaf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Leaf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Leaf) ProtoMessage() {}

func (x *Leaf) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Leaf.ProtoReflect.Descriptor instead.
func (*Leaf) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{13}
}

func (x *Leaf) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Leaf) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *Leaf) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Leaf) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Leaf) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Leaf) GetLiked() int64 {
	if x != nil {
		return x.Liked
	}
	return 0
}

type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Owner     int64  `protobuf:"varint,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Root      int64  `protobuf:"varint,3,opt,name=root,proto3" json:"root,omitempty"`
	Father    int64  `protobuf:"varint,4,opt,name=father,proto3" json:"father,omitempty"`
	CreatedAt int64  `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Status    int64  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	Message   string `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	Liked     int64  `protobuf:"varint,8,opt,name=liked,proto3" json:"liked,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{14}
}

func (x *Comment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Comment) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *Comment) GetRoot() int64 {
	if x != nil {
		return x.Root
	}
	return 0
}

func (x *Comment) GetFather() int64 {
	if x != nil {
		return x.Father
	}
	return 0
}

func (x *Comment) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Comment) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Comment) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Comment) GetLiked() int64 {
	if x != nil {
		return x.Liked
	}
	return 0
}

type Report struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type      int64  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Status    int64  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Reporter  int64  `protobuf:"varint,4,opt,name=reporter,proto3" json:"reporter,omitempty"`
	ReportId  int64  `protobuf:"varint,5,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	Reason    string `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
	Message   string `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	Reply     string `protobuf:"bytes,8,opt,name=reply,proto3" json:"reply,omitempty"`
	CreatedAt int64  `protobuf:"varint,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64  `protobuf:"varint,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Report) Reset() {
	*x = Report{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Report) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Report) ProtoMessage() {}

func (x *Report) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Report.ProtoReflect.Descriptor instead.
func (*Report) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{15}
}

func (x *Report) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Report) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Report) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Report) GetReporter() int64 {
	if x != nil {
		return x.Reporter
	}
	return 0
}

func (x *Report) GetReportId() int64 {
	if x != nil {
		return x.ReportId
	}
	return 0
}

func (x *Report) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Report) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Report) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

func (x *Report) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Report) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type MultipleLeafReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*Leaf `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *MultipleLeafReply) Reset() {
	*x = MultipleLeafReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultipleLeafReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipleLeafReply) ProtoMessage() {}

func (x *MultipleLeafReply) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipleLeafReply.ProtoReflect.Descriptor instead.
func (*MultipleLeafReply) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{16}
}

func (x *MultipleLeafReply) GetList() []*Leaf {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *MultipleLeafReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type MultipleCommentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*Comment `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *MultipleCommentReply) Reset() {
	*x = MultipleCommentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultipleCommentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipleCommentReply) ProtoMessage() {}

func (x *MultipleCommentReply) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipleCommentReply.ProtoReflect.Descriptor instead.
func (*MultipleCommentReply) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{17}
}

func (x *MultipleCommentReply) GetList() []*Comment {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *MultipleCommentReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type MultipleReportReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*Report `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *MultipleReportReply) Reset() {
	*x = MultipleReportReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultipleReportReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipleReportReply) ProtoMessage() {}

func (x *MultipleReportReply) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipleReportReply.ProtoReflect.Descriptor instead.
func (*MultipleReportReply) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{18}
}

func (x *MultipleReportReply) GetList() []*Report {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *MultipleReportReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type PushLeafReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *PushLeafReply) Reset() {
	*x = PushLeafReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushLeafReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushLeafReply) ProtoMessage() {}

func (x *PushLeafReply) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushLeafReply.ProtoReflect.Descriptor instead.
func (*PushLeafReply) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{19}
}

func (x *PushLeafReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PushLeafReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type DeleteLeafReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *DeleteLeafReply) Reset() {
	*x = DeleteLeafReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLeafReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLeafReply) ProtoMessage() {}

func (x *DeleteLeafReply) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLeafReply.ProtoReflect.Descriptor instead.
func (*DeleteLeafReply) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteLeafReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteLeafReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetLeafsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string             `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *MultipleLeafReply `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetLeafsReply) Reset() {
	*x = GetLeafsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeafsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeafsReply) ProtoMessage() {}

func (x *GetLeafsReply) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeafsReply.ProtoReflect.Descriptor instead.
func (*GetLeafsReply) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{21}
}

func (x *GetLeafsReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetLeafsReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetLeafsReply) GetData() *MultipleLeafReply {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetLeafDetailReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *Leaf  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetLeafDetailReply) Reset() {
	*x = GetLeafDetailReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeafDetailReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeafDetailReply) ProtoMessage() {}

func (x *GetLeafDetailReply) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeafDetailReply.ProtoReflect.Descriptor instead.
func (*GetLeafDetailReply) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{22}
}

func (x *GetLeafDetailReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetLeafDetailReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetLeafDetailReply) GetData() *Leaf {
	if x != nil {
		return x.Data
	}
	return nil
}

type CommentLeafRePly struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CommentLeafRePly) Reset() {
	*x = CommentLeafRePly{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentLeafRePly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentLeafRePly) ProtoMessage() {}

func (x *CommentLeafRePly) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentLeafRePly.ProtoReflect.Descriptor instead.
func (*CommentLeafRePly) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{23}
}

func (x *CommentLeafRePly) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CommentLeafRePly) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetCommentsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *MultipleCommentReply `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCommentsReply) Reset() {
	*x = GetCommentsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentsReply) ProtoMessage() {}

func (x *GetCommentsReply) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentsReply.ProtoReflect.Descriptor instead.
func (*GetCommentsReply) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{24}
}

func (x *GetCommentsReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCommentsReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetCommentsReply) GetData() *MultipleCommentReply {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteCommentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *DeleteCommentReply) Reset() {
	*x = DeleteCommentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentReply) ProtoMessage() {}

func (x *DeleteCommentReply) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentReply.ProtoReflect.Descriptor instead.
func (*DeleteCommentReply) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteCommentReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteCommentReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type LikeCommentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *LikeCommentReply) Reset() {
	*x = LikeCommentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeCommentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeCommentReply) ProtoMessage() {}

func (x *LikeCommentReply) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeCommentReply.ProtoReflect.Descriptor instead.
func (*LikeCommentReply) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{26}
}

func (x *LikeCommentReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LikeCommentReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReportReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ReportReply) Reset() {
	*x = ReportReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportReply) ProtoMessage() {}

func (x *ReportReply) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportReply.ProtoReflect.Descriptor instead.
func (*ReportReply) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{27}
}

func (x *ReportReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ReportReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetReportListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *MultipleReportReply `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetReportListReply) Reset() {
	*x = GetReportListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportListReply) ProtoMessage() {}

func (x *GetReportListReply) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportListReply.ProtoReflect.Descriptor instead.
func (*GetReportListReply) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{28}
}

func (x *GetReportListReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetReportListReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetReportListReply) GetData() *MultipleReportReply {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateReportReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *UpdateReportReply) Reset() {
	*x = UpdateReportReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReportReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReportReply) ProtoMessage() {}

func (x *UpdateReportReply) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReportReply.ProtoReflect.Descriptor instead.
func (*UpdateReportReply) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateReportReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateReportReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UpdateCommentStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *UpdateCommentStatusReply) Reset() {
	*x = UpdateCommentStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommentStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentStatusReply) ProtoMessage() {}

func (x *UpdateCommentStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentStatusReply.ProtoReflect.Descriptor instead.
func (*UpdateCommentStatusReply) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateCommentStatusReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateCommentStatusReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UpdateLeafStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *UpdateLeafStatusReply) Reset() {
	*x = UpdateLeafStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hollow_v1_forest_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLeafStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLeafStatusReply) ProtoMessage() {}

func (x *UpdateLeafStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_hollow_v1_forest_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLeafStatusReply.ProtoReflect.Descriptor instead.
func (*UpdateLeafStatusReply) Descriptor() ([]byte, []int) {
	return file_hollow_v1_forest_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateLeafStatusReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateLeafStatusReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_hollow_v1_forest_proto protoreflect.FileDescriptor

var file_hollow_v1_forest_proto_rawDesc = []byte{
	0x0a, 0x16, 0x68, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x6f, 0x72, 0x65,
	0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74,
	0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5a, 0x0a, 0x0f, 0x50, 0x75,
	0x73, 0x68, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x22, 0x04, 0x30, 0x00, 0x30, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x24, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0x8c, 0x01, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x01,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x53, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x66, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x01, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x01, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x2f, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x4c, 0x65, 0x61, 0x66, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x22, 0x02, 0x20, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x12, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x00, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x21,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x22, 0x04, 0x30, 0x00, 0x30, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x24, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0x8c, 0x01, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x66, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x00,
	0x52, 0x06, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x22, 0x94, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x22, 0x02, 0x28, 0x00, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x1b, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22,
	0x02, 0x28, 0x01, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x22, 0x02, 0x28, 0x01, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1f,
	0x0a, 0x06, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x00, 0x52, 0x06, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x22,
	0x2f, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x00, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x2d, 0x0a, 0x12, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x6b, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x22, 0x02, 0x28, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x22, 0x04, 0x10, 0x02,
	0x28, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x01, 0x18, 0x8c, 0x01, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x58, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x01, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x23, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x01, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x50, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02,
	0x28, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0x8c,
	0x01, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x58, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x09, 0xfa, 0x42, 0x06, 0x22, 0x04, 0x18, 0x01, 0x28, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x55, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x66,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02,
	0x28, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x22, 0x04, 0x18, 0x01, 0x28,
	0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x04, 0x4c, 0x65,
	0x61, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6b,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x22,
	0xc2, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c,
	0x69, 0x6b, 0x65, 0x64, 0x22, 0x83, 0x02, 0x0a, 0x06, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4e, 0x0a, 0x11, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x54, 0x0a, 0x14, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x52, 0x0a, 0x13, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x35, 0x0a, 0x0d, 0x50, 0x75, 0x73, 0x68, 0x4c, 0x65, 0x61, 0x66,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x37, 0x0a, 0x0f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0x67, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x66, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x30, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6f, 0x72, 0x65,
	0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4c, 0x65,
	0x61, 0x66, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5f, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x66, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x38,
	0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x50,
	0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x6d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0x38, 0x0a, 0x10, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x33, 0x0a,
	0x0b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x6e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x32,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66,
	0x6f, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x39, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x40, 0x0a,
	0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x3d, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x66, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x32, 0xfe,
	0x0a, 0x0a, 0x07, 0x46, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73, 0x12, 0x58, 0x0a, 0x08, 0x50, 0x75,
	0x73, 0x68, 0x4c, 0x65, 0x61, 0x66, 0x12, 0x1a, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x75, 0x73, 0x68, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x16, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x10, 0x22, 0x0b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x6f, 0x72, 0x65, 0x73,
	0x74, 0x3a, 0x01, 0x2a, 0x12, 0x60, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65,
	0x61, 0x66, 0x12, 0x1c, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x18, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x12, 0x2a, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x6f, 0x72, 0x65, 0x73,
	0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x5a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x66, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x65, 0x61, 0x66, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x11, 0x12, 0x0f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2f, 0x61,
	0x6c, 0x6c, 0x12, 0x69, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x66, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x1f, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x66, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x66, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6d, 0x0a,
	0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x73,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x61, 0x66,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x61, 0x66, 0x52,
	0x65, 0x50, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x22, 0x1b, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x7b, 0x72, 0x6f, 0x6f, 0x74, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x6e, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x2e, 0x66, 0x6f,
	0x72, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x66, 0x6f, 0x72,
	0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12,
	0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x72, 0x6f, 0x6f, 0x74, 0x7d, 0x12, 0x72, 0x0a, 0x0d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x2e,
	0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x2a, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x6f, 0x72, 0x65,
	0x73, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0x6f, 0x0a, 0x0b, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x1d, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6b, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1e, 0x1a, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01,
	0x2a, 0x12, 0x52, 0x0a, 0x06, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x2e, 0x66, 0x6f,
	0x72, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x16, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x10, 0x22, 0x0b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x64, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x6a, 0x0a, 0x0c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x2e, 0x66, 0x6f,
	0x72, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x66, 0x6f,
	0x72, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x16, 0x1a, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x88, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x25, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1f, 0x1a, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f,
	0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3a,
	0x01, 0x2a, 0x12, 0x7b, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x66,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x66, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x66, 0x6f, 0x72,
	0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61,
	0x66, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1b, 0x1a, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2f, 0x6c, 0x65, 0x61, 0x66, 0x3a, 0x01, 0x2a, 0x42,
	0x44, 0x0a, 0x18, 0x64, 0x65, 0x76, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x46, 0x6f, 0x72,
	0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x17, 0x68, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x2f,
	0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hollow_v1_forest_proto_rawDescOnce sync.Once
	file_hollow_v1_forest_proto_rawDescData = file_hollow_v1_forest_proto_rawDesc
)

func file_hollow_v1_forest_proto_rawDescGZIP() []byte {
	file_hollow_v1_forest_proto_rawDescOnce.Do(func() {
		file_hollow_v1_forest_proto_rawDescData = protoimpl.X.CompressGZIP(file_hollow_v1_forest_proto_rawDescData)
	})
	return file_hollow_v1_forest_proto_rawDescData
}

var file_hollow_v1_forest_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_hollow_v1_forest_proto_goTypes = []interface{}{
	(*PushLeafRequest)(nil),            // 0: forest.v1.PushLeafRequest
	(*DeleteLeafRequest)(nil),          // 1: forest.v1.DeleteLeafRequest
	(*GetLeafsRequest)(nil),            // 2: forest.v1.GetLeafsRequest
	(*GetLeafDetailRequest)(nil),       // 3: forest.v1.GetLeafDetailRequest
	(*CommentLeafRequest)(nil),         // 4: forest.v1.CommentLeafRequest
	(*GetCommentsRequest)(nil),         // 5: forest.v1.GetCommentsRequest
	(*DeleteCommentRequest)(nil),       // 6: forest.v1.DeleteCommentRequest
	(*LikeCommentRequest)(nil),         // 7: forest.v1.LikeCommentRequest
	(*ReportRequest)(nil),              // 8: forest.v1.ReportRequest
	(*GetReportListRequest)(nil),       // 9: forest.v1.GetReportListRequest
	(*UpdateReportRequest)(nil),        // 10: forest.v1.UpdateReportRequest
	(*UpdateCommentStatusRequest)(nil), // 11: forest.v1.UpdateCommentStatusRequest
	(*UpdateLeafStatusRequest)(nil),    // 12: forest.v1.UpdateLeafStatusRequest
	(*Leaf)(nil),                       // 13: forest.v1.Leaf
	(*Comment)(nil),                    // 14: forest.v1.Comment
	(*Report)(nil),                     // 15: forest.v1.Report
	(*MultipleLeafReply)(nil),          // 16: forest.v1.MultipleLeafReply
	(*MultipleCommentReply)(nil),       // 17: forest.v1.MultipleCommentReply
	(*MultipleReportReply)(nil),        // 18: forest.v1.MultipleReportReply
	(*PushLeafReply)(nil),              // 19: forest.v1.PushLeafReply
	(*DeleteLeafReply)(nil),            // 20: forest.v1.DeleteLeafReply
	(*GetLeafsReply)(nil),              // 21: forest.v1.GetLeafsReply
	(*GetLeafDetailReply)(nil),         // 22: forest.v1.GetLeafDetailReply
	(*CommentLeafRePly)(nil),           // 23: forest.v1.CommentLeafRePly
	(*GetCommentsReply)(nil),           // 24: forest.v1.GetCommentsReply
	(*DeleteCommentReply)(nil),         // 25: forest.v1.DeleteCommentReply
	(*LikeCommentReply)(nil),           // 26: forest.v1.LikeCommentReply
	(*ReportReply)(nil),                // 27: forest.v1.ReportReply
	(*GetReportListReply)(nil),         // 28: forest.v1.GetReportListReply
	(*UpdateReportReply)(nil),          // 29: forest.v1.UpdateReportReply
	(*UpdateCommentStatusReply)(nil),   // 30: forest.v1.UpdateCommentStatusReply
	(*UpdateLeafStatusReply)(nil),      // 31: forest.v1.UpdateLeafStatusReply
}
var file_hollow_v1_forest_proto_depIdxs = []int32{
	13, // 0: forest.v1.MultipleLeafReply.list:type_name -> forest.v1.Leaf
	14, // 1: forest.v1.MultipleCommentReply.list:type_name -> forest.v1.Comment
	15, // 2: forest.v1.MultipleReportReply.list:type_name -> forest.v1.Report
	16, // 3: forest.v1.GetLeafsReply.data:type_name -> forest.v1.MultipleLeafReply
	13, // 4: forest.v1.GetLeafDetailReply.data:type_name -> forest.v1.Leaf
	17, // 5: forest.v1.GetCommentsReply.data:type_name -> forest.v1.MultipleCommentReply
	18, // 6: forest.v1.GetReportListReply.data:type_name -> forest.v1.MultipleReportReply
	0,  // 7: forest.v1.Forests.PushLeaf:input_type -> forest.v1.PushLeafRequest
	1,  // 8: forest.v1.Forests.DeleteLeaf:input_type -> forest.v1.DeleteLeafRequest
	2,  // 9: forest.v1.Forests.GetForest:input_type -> forest.v1.GetLeafsRequest
	3,  // 10: forest.v1.Forests.GetLeafDetail:input_type -> forest.v1.GetLeafDetailRequest
	4,  // 11: forest.v1.Forests.Comment:input_type -> forest.v1.CommentLeafRequest
	5,  // 12: forest.v1.Forests.GetComments:input_type -> forest.v1.GetCommentsRequest
	6,  // 13: forest.v1.Forests.DeleteComment:input_type -> forest.v1.DeleteCommentRequest
	7,  // 14: forest.v1.Forests.LikeComment:input_type -> forest.v1.LikeCommentRequest
	8,  // 15: forest.v1.Forests.Report:input_type -> forest.v1.ReportRequest
	9,  // 16: forest.v1.Forests.GetReportList:input_type -> forest.v1.GetReportListRequest
	10, // 17: forest.v1.Forests.UpdateReport:input_type -> forest.v1.UpdateReportRequest
	11, // 18: forest.v1.Forests.UpdateCommentStatus:input_type -> forest.v1.UpdateCommentStatusRequest
	12, // 19: forest.v1.Forests.UpdateLeafStatus:input_type -> forest.v1.UpdateLeafStatusRequest
	19, // 20: forest.v1.Forests.PushLeaf:output_type -> forest.v1.PushLeafReply
	20, // 21: forest.v1.Forests.DeleteLeaf:output_type -> forest.v1.DeleteLeafReply
	21, // 22: forest.v1.Forests.GetForest:output_type -> forest.v1.GetLeafsReply
	22, // 23: forest.v1.Forests.GetLeafDetail:output_type -> forest.v1.GetLeafDetailReply
	23, // 24: forest.v1.Forests.Comment:output_type -> forest.v1.CommentLeafRePly
	24, // 25: forest.v1.Forests.GetComments:output_type -> forest.v1.GetCommentsReply
	25, // 26: forest.v1.Forests.DeleteComment:output_type -> forest.v1.DeleteCommentReply
	26, // 27: forest.v1.Forests.LikeComment:output_type -> forest.v1.LikeCommentReply
	27, // 28: forest.v1.Forests.Report:output_type -> forest.v1.ReportReply
	28, // 29: forest.v1.Forests.GetReportList:output_type -> forest.v1.GetReportListReply
	29, // 30: forest.v1.Forests.UpdateReport:output_type -> forest.v1.UpdateReportReply
	30, // 31: forest.v1.Forests.UpdateCommentStatus:output_type -> forest.v1.UpdateCommentStatusReply
	31, // 32: forest.v1.Forests.UpdateLeafStatus:output_type -> forest.v1.UpdateLeafStatusReply
	20, // [20:33] is the sub-list for method output_type
	7,  // [7:20] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_hollow_v1_forest_proto_init() }
func file_hollow_v1_forest_proto_init() {
	if File_hollow_v1_forest_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hollow_v1_forest_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushLeafRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLeafRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeafsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeafDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentLeafRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommentStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLeafStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Leaf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Report); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultipleLeafReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultipleCommentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultipleReportReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushLeafReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLeafReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeafsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeafDetailReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentLeafRePly); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCommentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeCommentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReportReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommentStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hollow_v1_forest_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLeafStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hollow_v1_forest_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hollow_v1_forest_proto_goTypes,
		DependencyIndexes: file_hollow_v1_forest_proto_depIdxs,
		MessageInfos:      file_hollow_v1_forest_proto_msgTypes,
	}.Build()
	File_hollow_v1_forest_proto = out.File
	file_hollow_v1_forest_proto_rawDesc = nil
	file_hollow_v1_forest_proto_goTypes = nil
	file_hollow_v1_forest_proto_depIdxs = nil
}
